"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const knex_1 = __importDefault(require("knex"));
const knex_mock_client_1 = require("knex-mock-client");
const run_1 = __importDefault(require("../../../database/migrations/run"));
describe('run', () => {
    let db;
    let tracker;
    beforeAll(() => {
        db = (0, knex_1.default)({ client: knex_mock_client_1.MockClient });
        tracker = (0, knex_mock_client_1.getTracker)();
    });
    afterEach(() => {
        tracker.reset();
    });
    describe('when passed the argument up', () => {
        it('returns "Nothing To Updage" if no directus_migrations', async () => {
            // note the difference between an empty array and ['Empty']
            tracker.on.select('directus_migrations').response(['Empty']);
            await (0, run_1.default)(db, 'up').catch((e) => {
                expect(e).toBeInstanceOf(Error);
                expect(e.message).toBe('Nothing to upgrade');
            });
        });
    });
});
